---
title: "Git"
author: "HRM"
date: 19 Sep 2025
date-format: "MMMM DD, YYYY"
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 3
    smooth-scroll: true

    # Code formatting
    code-copy: true
    code-fold: show
    code-line-numbers: true
    highlight-style: dracula
---

# Git
- Git is a distributed `VCS(Version Control Software)`
- It store all code history/snapshots in `.git` folder
- If you delete even all files, then you can recover all files from `.git` folder, because all codes are stored there with history

## Lets start maintaining history

- [Install from official website git-scm](https://git-scm.com/){target="_blank"}


::: {.callout-note collapse="false" title="FLOW"}
`work --> add/commit --> work --> add/commit --> ...`

whenever we need we can do undo/redo
:::

Create a `folder` for your project/work

0. `git config --global init.defaultBranch main` or later you may need to do `git branch -m master main`
1. `git init` create .git folder
2. create some files and write something
3. `git add .` add all files in staging area (except the files/folder name in `.gitignore` file)  
  - `git reset abc.txt` will unstage, if something done by mistake
4. `git commit -m "first commit"` record this history in .git folder
5. now repeat 2nd, 3rd and 4th steps
6. If somewhere you want to go back to any specify commit
    - `git log --one line`
    - `git checkout <commit_id>`
    - `git checkout main`
    - `git reset --soft <commit_id>`  
      - `soft` -> keeps your changes staged
      - `mixed` -> keeps your changes unstaged
      - `hard` -> ⚠️ discards everything after that commit


::: {.callout-tip collapse="false" title="Just Previous Commit"}

- `git reset --soft HEAD~1`  
- `git reset --mixed HEAD~1`  
- `git reset --hard HEAD~1`  

:::



