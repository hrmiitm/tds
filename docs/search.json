[
  {
    "objectID": "W1/wsl.html",
    "href": "W1/wsl.html",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "We will use windows powershell to install wsl.\n\n\n\nOpen PowerShell\nwsl --version or wsl.exe --version\nIf any above command shows wsl version 2 , then it is already installed\n\n\n\n\n\nSearch Turn Windows features on or off\n\nEnable Virtual Machine Platform, Windows Hypervisor Platform, Windows Subsytem for Linux\n\nRestart Computer (Not power on/off, click on restart)\nInstall WSL WSL-2 Setup\nSwitch to WSL-2 wsl --set-default-version 2\n\n\n\n\nwsl --list --verbose\nFor Each Listed distribution\n- wsl --unregister &lt;DistributionName&gt;\n- Open Settings → Apps → Installed apps - Find each Linux distribution, click the three-dot menu, and select Uninstall\n\n\n\n\nwsl --update\n\nwsl --list --online\n\nwsl --install Ubuntu-24.04 –&gt; Install Ubuntu\n\nsudo apt update && sudo apt upgrade -y –&gt; Update Ubuntu\n\n\n\n\n\n\n\nExample\n\n\n\n\n\nPS C:\\Users\\hrith&gt; wsl --install Ubuntu-24.04\nDownloading: Ubuntu 24.04 LTS\nInstalling: Ubuntu 24.04 LTS\nDistribution successfully installed. It can be launched via 'wsl.exe -d Ubuntu-24.04'\nLaunching Ubuntu-24.04...\nProvisioning the new WSL instance Ubuntu-24.04\nThis might take a while...\nCreate a default Unix user account: hrm\nNew password:\nRetype new password:\npasswd: password updated successfully\nTo run a command as administrator (user \"root\"), use \"sudo &lt;command&gt;\".\nSee \"man sudo_root\" for details.\n\nhrm@bitnd:/mnt/c/Users/hrith$ sudo apt update && sudo apt upgrade -y\n[sudo] password for hrm:\nHit:1 http://archive.ubuntu.com/ubuntu noble InRelease\nGet:2 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]\n\n\n\n\n\n\n\nnvm install visit and run bash script https://github.com/nvm-sh/nvm\n\nnode install https://nodejs.org/en/download\n\nnvm install 22\n\nnvm list nvm use 22 nvm current\n\ncorepack enable yarn\n\ncorepack enable pnpm\n\n\n\nCheck\n- nvm -v\n- node -v\n- npm -v npx -v\n- pnpm -v\n- yarn -v\n\n\n\n\n\nPython VENV\n\npython3 -m venv .venv –&gt; Copy error code and run sudo apt install python3.12-venv\n\nPIPX\n\nsudo apt install pipx\n\nUV - Rust-based Python package installer\n\npipx install uv It will maintain isolation\n\nLLM\n\npipx install llm –&gt; pipx ensurepath\nConfigure it\n\nllm install llm-gemini or llm install llm-ollama\nllm keys set gemini\nllm -m gemini-2.0-flash 'Tell me fun facts about Mountain View'\n\n\nMiniConda\n\nDownload .sh https://www.anaconda.com/download/success\nbash &lt;pathto .sh file&gt;\nconda config --set auto_activate_base false\n\n\n\n\n\nsudo apt install build-essential\n\ngcc –&gt; The C compiler\n\ng++ –&gt; The C++ compiler\n\n\nCheck - gcc –verison\n- g++ –version\n\n\n\n\nsudo apt install default-jdk\n\nThis command installs:\n\nJava Development Kit (JDK) - Compiler, debugger, and development tools  \nJava Runtime Environment (JRE) - Required to run Java applications  \nJava Virtual Machine (JVM) - Core execution environment  \n\nConfigure JAVA_HOME Environment Variable\n\necho 'export JAVA_HOME=\"/usr/lib/jvm/default-java\"' &gt;&gt; ~/.bashrc ## confirm the path first using below update-alternatiove… command\n\nrestart shell\n\nInstall other versions of java\n\nsudo apt install openjdk-17-jdk\n\nSet Default Java/Javac installed version\n\nsudo update-alternatives --config java\nsudo update-alternatives --config javac\n\n\n\nCheck\n- java --version\n- javac --version\n- echo $JAVA_HOME\n\n\n\n\n\n\n\nWSL-2 Setup"
  },
  {
    "objectID": "W1/wsl.html#check-wsl-2-installed-or-not",
    "href": "W1/wsl.html#check-wsl-2-installed-or-not",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "Open PowerShell\nwsl --version or wsl.exe --version\nIf any above command shows wsl version 2 , then it is already installed"
  },
  {
    "objectID": "W1/wsl.html#if-wsl-2-not-instlled",
    "href": "W1/wsl.html#if-wsl-2-not-instlled",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "Search Turn Windows features on or off\n\nEnable Virtual Machine Platform, Windows Hypervisor Platform, Windows Subsytem for Linux\n\nRestart Computer (Not power on/off, click on restart)\nInstall WSL WSL-2 Setup\nSwitch to WSL-2 wsl --set-default-version 2"
  },
  {
    "objectID": "W1/wsl.html#if-already-installed-then-remove-previous-installed-distributions",
    "href": "W1/wsl.html#if-already-installed-then-remove-previous-installed-distributions",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "wsl --list --verbose\nFor Each Listed distribution\n- wsl --unregister &lt;DistributionName&gt;\n- Open Settings → Apps → Installed apps - Find each Linux distribution, click the three-dot menu, and select Uninstall"
  },
  {
    "objectID": "W1/wsl.html#update-wsl-ubuntu-installation",
    "href": "W1/wsl.html#update-wsl-ubuntu-installation",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "wsl --update\n\nwsl --list --online\n\nwsl --install Ubuntu-24.04 –&gt; Install Ubuntu\n\nsudo apt update && sudo apt upgrade -y –&gt; Update Ubuntu\n\n\n\n\n\n\n\nExample\n\n\n\n\n\nPS C:\\Users\\hrith&gt; wsl --install Ubuntu-24.04\nDownloading: Ubuntu 24.04 LTS\nInstalling: Ubuntu 24.04 LTS\nDistribution successfully installed. It can be launched via 'wsl.exe -d Ubuntu-24.04'\nLaunching Ubuntu-24.04...\nProvisioning the new WSL instance Ubuntu-24.04\nThis might take a while...\nCreate a default Unix user account: hrm\nNew password:\nRetype new password:\npasswd: password updated successfully\nTo run a command as administrator (user \"root\"), use \"sudo &lt;command&gt;\".\nSee \"man sudo_root\" for details.\n\nhrm@bitnd:/mnt/c/Users/hrith$ sudo apt update && sudo apt upgrade -y\n[sudo] password for hrm:\nHit:1 http://archive.ubuntu.com/ubuntu noble InRelease\nGet:2 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]"
  },
  {
    "objectID": "W1/wsl.html#install-javascript-tools",
    "href": "W1/wsl.html#install-javascript-tools",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "nvm install visit and run bash script https://github.com/nvm-sh/nvm\n\nnode install https://nodejs.org/en/download\n\nnvm install 22\n\nnvm list nvm use 22 nvm current\n\ncorepack enable yarn\n\ncorepack enable pnpm\n\n\n\nCheck\n- nvm -v\n- node -v\n- npm -v npx -v\n- pnpm -v\n- yarn -v"
  },
  {
    "objectID": "W1/wsl.html#install-python-tools",
    "href": "W1/wsl.html#install-python-tools",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "Python VENV\n\npython3 -m venv .venv –&gt; Copy error code and run sudo apt install python3.12-venv\n\nPIPX\n\nsudo apt install pipx\n\nUV - Rust-based Python package installer\n\npipx install uv It will maintain isolation\n\nLLM\n\npipx install llm –&gt; pipx ensurepath\nConfigure it\n\nllm install llm-gemini or llm install llm-ollama\nllm keys set gemini\nllm -m gemini-2.0-flash 'Tell me fun facts about Mountain View'\n\n\nMiniConda\n\nDownload .sh https://www.anaconda.com/download/success\nbash &lt;pathto .sh file&gt;\nconda config --set auto_activate_base false"
  },
  {
    "objectID": "W1/wsl.html#install-cc-tools",
    "href": "W1/wsl.html#install-cc-tools",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "sudo apt install build-essential\n\ngcc –&gt; The C compiler\n\ng++ –&gt; The C++ compiler\n\n\nCheck - gcc –verison\n- g++ –version"
  },
  {
    "objectID": "W1/wsl.html#install-java-tools",
    "href": "W1/wsl.html#install-java-tools",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "sudo apt install default-jdk\n\nThis command installs:\n\nJava Development Kit (JDK) - Compiler, debugger, and development tools  \nJava Runtime Environment (JRE) - Required to run Java applications  \nJava Virtual Machine (JVM) - Core execution environment  \n\nConfigure JAVA_HOME Environment Variable\n\necho 'export JAVA_HOME=\"/usr/lib/jvm/default-java\"' &gt;&gt; ~/.bashrc ## confirm the path first using below update-alternatiove… command\n\nrestart shell\n\nInstall other versions of java\n\nsudo apt install openjdk-17-jdk\n\nSet Default Java/Javac installed version\n\nsudo update-alternatives --config java\nsudo update-alternatives --config javac\n\n\n\nCheck\n- java --version\n- javac --version\n- echo $JAVA_HOME"
  },
  {
    "objectID": "W1/wsl.html#resources",
    "href": "W1/wsl.html#resources",
    "title": "Install WSL in Windows",
    "section": "",
    "text": "WSL-2 Setup"
  },
  {
    "objectID": "W1/w1_3.html",
    "href": "W1/w1_3.html",
    "title": "VM Virtual Machines",
    "section": "",
    "text": "Download and Install Virtual Box\n\nLink\n\nDownload .iso file of any distribution\n\ne.g. Ubuntu\n\nInstall iso file in Virtual Box\n\nClick on New\nSelect Iso and fill required data…\n\n\n\n\n\n\n\n\nVirtual Box Setup (Hindi)",
    "crumbs": [
      "Week1",
      "VM Virtual Machines"
    ]
  },
  {
    "objectID": "W1/w1_3.html#using-type-2-hypervisor",
    "href": "W1/w1_3.html#using-type-2-hypervisor",
    "title": "VM Virtual Machines",
    "section": "",
    "text": "Download and Install Virtual Box\n\nLink\n\nDownload .iso file of any distribution\n\ne.g. Ubuntu\n\nInstall iso file in Virtual Box\n\nClick on New\nSelect Iso and fill required data…",
    "crumbs": [
      "Week1",
      "VM Virtual Machines"
    ]
  },
  {
    "objectID": "W1/w1_3.html#resources",
    "href": "W1/w1_3.html#resources",
    "title": "VM Virtual Machines",
    "section": "",
    "text": "Virtual Box Setup (Hindi)",
    "crumbs": [
      "Week1",
      "VM Virtual Machines"
    ]
  },
  {
    "objectID": "W1/w1_1.html",
    "href": "W1/w1_1.html",
    "title": "Computer Boot Process",
    "section": "",
    "text": "Overview\nBoot Process Steps\nPartition Styles vs File Systems\nBoot Process Summary\nFrequently Asked Questions\nResources\n\n\n\n\nThe computer boot process transforms your computer from powered-off state to a fully operational system. This guide covers the essential steps and concepts needed to understand how computers start.\n\n\n\n\n\nWhen you press the power button:\n\nCPU executes the first program BIOS/UEFI\n\nBIOS (Basic Input/Output System) - Legacy firmware (used in old computers)\nUEFI (Unified Extensible Firmware Interface) - Modern firmware\n\n\n\n\n\nPOST (Power-On Self Test):\n\nTests CPU, RAM, and storage devices\nValidates hardware components\n\nBoot Device Selection:\n\nReads Boot Order from firmware settings\nGPT drives: Looks for EFI System Partition\nMBR drives: Checks Master Boot Record in first sector\n\n\n\n\nCommon Bootloaders:\nLinux or Window bootloader, both can scan and start any OS windows or linux.\n- Linux: GRUB2, LILO, systemd-boot - Windows: Windows Boot Manager\nBootloader Tasks:\n\nScans partitions for installed operating systems\nPresents boot menu (if multiple OS found)\nLoads selected OS kernel into memory\n\n\n\n\nLinux OS Boot:\n\nKernel loads and initializes hardware\nsystemd starts (modern init system)\nSystem services launch\nUser login interface appears\n\nWindows OS Boot:\n\nNT Kernel (ntoskrnl.exe) loads\nHardware Abstraction Layer initializes\nRegistry and system drivers load\nSession Manager starts Windows subsystems\nWindows Logon presents login interface\n\n\n\n\n\n\n\nPartition styles define how a drive is divided into sections:\n\n\n\n\n\n\n\n\nFeature\nMBR\nGPT\n\n\n\n\nMax Partitions\n4 primary OR 3 primary + 1 extended\n128 primary\n\n\nMax Storage\n2 TB\n18+ exabytes\n\n\nBoot Support\nBIOS only\nBIOS + UEFI\n\n\n\n\n\n\nFile systems determine how data is stored within partitions:\n\n\n\nFile System\nOS\nUse Case\n\n\n\n\nNTFS\nWindows\nSystem drives, large files\n\n\nFAT32\nCross-platform\nUSB drives, compatibility\n\n\next4\nLinux\nLinux system drives\n\n\nAPFS\nmacOS\nmacOS system drives\n\n\n\n\n\n\n\n\n\n\nPhase\nComponent\nPurpose\n\n\n\n\n1\nFirmware (BIOS/UEFI)\nHardware initialization\n\n\n2\nPOST\nHardware verification\n\n\n3\nBootloader\nOS selection and loading\n\n\n4\nOS Kernel\nSystem initialization\n\n\n\n\n\n\n\n\nflowchart LR\n    A[Power On] --&gt; B[Bios/Uefi]\n    B --&gt; C[POST Check]\n    C --&gt; D[LocateDrive]\n    D --&gt; E[Run Bootloader]\n    E --&gt; F{Select OS}\n    F --&gt;|Linux| G[Kernel + systemd]\n    F --&gt;|Windows| H[NT Kernel]\n    G --&gt; I[User Login]\n    H --&gt; I\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeature\nBIOS\nUEFI\n\n\n\n\nInterface\nText-only\nGraphical possible\n\n\nStorage Support\n2 TB max\nNo practical limit\n\n\nSecurity\nBasic\nSecure Boot\n\n\nSpeed\nSlower\nFaster\n\n\n\n\n\n\nPartition Style: Defines how the drive is divided (MBR vs GPT) File System: Defines how files are stored within each partition (NTFS, ext4, etc.)\n\n\n\nYes, by:\n\nInstalling each OS on separate partitions\nUsing a bootloader that detects all systems\nSelecting which OS to boot at startup\n\n\n\n\n\n\n\n\nBoot Process (English)\nBoot Process (Hindi)\nWindows Partitions (Hindi)\n\n\n\nBoot Process (English) \nBoot Process (Hindi) \nWindows Partitions (Hindi)",
    "crumbs": [
      "Week1",
      "Computer Boot Process"
    ]
  },
  {
    "objectID": "W1/w1_1.html#table-of-contents",
    "href": "W1/w1_1.html#table-of-contents",
    "title": "Computer Boot Process",
    "section": "",
    "text": "Overview\nBoot Process Steps\nPartition Styles vs File Systems\nBoot Process Summary\nFrequently Asked Questions\nResources",
    "crumbs": [
      "Week1",
      "Computer Boot Process"
    ]
  },
  {
    "objectID": "W1/w1_1.html#overview",
    "href": "W1/w1_1.html#overview",
    "title": "Computer Boot Process",
    "section": "",
    "text": "The computer boot process transforms your computer from powered-off state to a fully operational system. This guide covers the essential steps and concepts needed to understand how computers start.",
    "crumbs": [
      "Week1",
      "Computer Boot Process"
    ]
  },
  {
    "objectID": "W1/w1_1.html#boot-process-steps",
    "href": "W1/w1_1.html#boot-process-steps",
    "title": "Computer Boot Process",
    "section": "",
    "text": "When you press the power button:\n\nCPU executes the first program BIOS/UEFI\n\nBIOS (Basic Input/Output System) - Legacy firmware (used in old computers)\nUEFI (Unified Extensible Firmware Interface) - Modern firmware\n\n\n\n\n\nPOST (Power-On Self Test):\n\nTests CPU, RAM, and storage devices\nValidates hardware components\n\nBoot Device Selection:\n\nReads Boot Order from firmware settings\nGPT drives: Looks for EFI System Partition\nMBR drives: Checks Master Boot Record in first sector\n\n\n\n\nCommon Bootloaders:\nLinux or Window bootloader, both can scan and start any OS windows or linux.\n- Linux: GRUB2, LILO, systemd-boot - Windows: Windows Boot Manager\nBootloader Tasks:\n\nScans partitions for installed operating systems\nPresents boot menu (if multiple OS found)\nLoads selected OS kernel into memory\n\n\n\n\nLinux OS Boot:\n\nKernel loads and initializes hardware\nsystemd starts (modern init system)\nSystem services launch\nUser login interface appears\n\nWindows OS Boot:\n\nNT Kernel (ntoskrnl.exe) loads\nHardware Abstraction Layer initializes\nRegistry and system drivers load\nSession Manager starts Windows subsystems\nWindows Logon presents login interface",
    "crumbs": [
      "Week1",
      "Computer Boot Process"
    ]
  },
  {
    "objectID": "W1/w1_1.html#partition-styles-vs-file-systems",
    "href": "W1/w1_1.html#partition-styles-vs-file-systems",
    "title": "Computer Boot Process",
    "section": "",
    "text": "Partition styles define how a drive is divided into sections:\n\n\n\n\n\n\n\n\nFeature\nMBR\nGPT\n\n\n\n\nMax Partitions\n4 primary OR 3 primary + 1 extended\n128 primary\n\n\nMax Storage\n2 TB\n18+ exabytes\n\n\nBoot Support\nBIOS only\nBIOS + UEFI\n\n\n\n\n\n\nFile systems determine how data is stored within partitions:\n\n\n\nFile System\nOS\nUse Case\n\n\n\n\nNTFS\nWindows\nSystem drives, large files\n\n\nFAT32\nCross-platform\nUSB drives, compatibility\n\n\next4\nLinux\nLinux system drives\n\n\nAPFS\nmacOS\nmacOS system drives",
    "crumbs": [
      "Week1",
      "Computer Boot Process"
    ]
  },
  {
    "objectID": "W1/w1_1.html#boot-process-summary",
    "href": "W1/w1_1.html#boot-process-summary",
    "title": "Computer Boot Process",
    "section": "",
    "text": "Phase\nComponent\nPurpose\n\n\n\n\n1\nFirmware (BIOS/UEFI)\nHardware initialization\n\n\n2\nPOST\nHardware verification\n\n\n3\nBootloader\nOS selection and loading\n\n\n4\nOS Kernel\nSystem initialization\n\n\n\n\n\n\n\n\nflowchart LR\n    A[Power On] --&gt; B[Bios/Uefi]\n    B --&gt; C[POST Check]\n    C --&gt; D[LocateDrive]\n    D --&gt; E[Run Bootloader]\n    E --&gt; F{Select OS}\n    F --&gt;|Linux| G[Kernel + systemd]\n    F --&gt;|Windows| H[NT Kernel]\n    G --&gt; I[User Login]\n    H --&gt; I",
    "crumbs": [
      "Week1",
      "Computer Boot Process"
    ]
  },
  {
    "objectID": "W1/w1_1.html#frequently-asked-questions",
    "href": "W1/w1_1.html#frequently-asked-questions",
    "title": "Computer Boot Process",
    "section": "",
    "text": "Feature\nBIOS\nUEFI\n\n\n\n\nInterface\nText-only\nGraphical possible\n\n\nStorage Support\n2 TB max\nNo practical limit\n\n\nSecurity\nBasic\nSecure Boot\n\n\nSpeed\nSlower\nFaster\n\n\n\n\n\n\nPartition Style: Defines how the drive is divided (MBR vs GPT) File System: Defines how files are stored within each partition (NTFS, ext4, etc.)\n\n\n\nYes, by:\n\nInstalling each OS on separate partitions\nUsing a bootloader that detects all systems\nSelecting which OS to boot at startup",
    "crumbs": [
      "Week1",
      "Computer Boot Process"
    ]
  },
  {
    "objectID": "W1/w1_1.html#resources",
    "href": "W1/w1_1.html#resources",
    "title": "Computer Boot Process",
    "section": "",
    "text": "Boot Process (English)\nBoot Process (Hindi)\nWindows Partitions (Hindi)\n\n\n\nBoot Process (English) \nBoot Process (Hindi) \nWindows Partitions (Hindi)",
    "crumbs": [
      "Week1",
      "Computer Boot Process"
    ]
  },
  {
    "objectID": "W1/vm.html",
    "href": "W1/vm.html",
    "title": "In Windows",
    "section": "",
    "text": "Download and Install Virtual Box\n\nLink\n\nDownload .iso file of any distribution\n\ne.g. Ubuntu\n\nInstall iso file in Virtual Box\n\nClick on New\nSelect Iso and fill required data…\n\n\n\n\n\n\n\n\nVirtual Box Setup (Hindi)"
  },
  {
    "objectID": "W1/vm.html#using-type-2-hypervisor",
    "href": "W1/vm.html#using-type-2-hypervisor",
    "title": "In Windows",
    "section": "",
    "text": "Download and Install Virtual Box\n\nLink\n\nDownload .iso file of any distribution\n\ne.g. Ubuntu\n\nInstall iso file in Virtual Box\n\nClick on New\nSelect Iso and fill required data…"
  },
  {
    "objectID": "W1/vm.html#resources",
    "href": "W1/vm.html#resources",
    "title": "In Windows",
    "section": "",
    "text": "Virtual Box Setup (Hindi)"
  },
  {
    "objectID": "W1/boot.html",
    "href": "W1/boot.html",
    "title": "Computer Boot Process: Essential Guide",
    "section": "",
    "text": "Overview\nBoot Process Steps\nPartition Styles vs File Systems\nBoot Process Summary\nFrequently Asked Questions\nResources\n\n\n\n\nThe computer boot process transforms your computer from powered-off state to a fully operational system. This guide covers the essential steps and concepts needed to understand how computers start.\n\n\n\n\n\nWhen you press the power button:\n\nCPU executes the first program BIOS/UEFI\n\nBIOS (Basic Input/Output System) - Legacy firmware (used in old computers)\nUEFI (Unified Extensible Firmware Interface) - Modern firmware\n\n\n\n\n\nPOST (Power-On Self Test):\n\nTests CPU, RAM, and storage devices\nValidates hardware components\n\nBoot Device Selection:\n\nReads Boot Order from firmware settings\nGPT drives: Looks for EFI System Partition\nMBR drives: Checks Master Boot Record in first sector\n\n\n\n\nCommon Bootloaders:\nLinux or Window bootloader, both can scan and start any OS windows or linux.\n- Linux: GRUB2, LILO, systemd-boot - Windows: Windows Boot Manager\nBootloader Tasks:\n\nScans partitions for installed operating systems\nPresents boot menu (if multiple OS found)\nLoads selected OS kernel into memory\n\n\n\n\nLinux OS Boot:\n\nKernel loads and initializes hardware\nsystemd starts (modern init system)\nSystem services launch\nUser login interface appears\n\nWindows OS Boot:\n\nNT Kernel (ntoskrnl.exe) loads\nHardware Abstraction Layer initializes\nRegistry and system drivers load\nSession Manager starts Windows subsystems\nWindows Logon presents login interface\n\n\n\n\n\n\n\nPartition styles define how a drive is divided into sections:\n\n\n\n\n\n\n\n\nFeature\nMBR\nGPT\n\n\n\n\nMax Partitions\n4 primary OR 3 primary + 1 extended\n128 primary\n\n\nMax Storage\n2 TB\n18+ exabytes\n\n\nBoot Support\nBIOS only\nBIOS + UEFI\n\n\n\n\n\n\nFile systems determine how data is stored within partitions:\n\n\n\nFile System\nOS\nUse Case\n\n\n\n\nNTFS\nWindows\nSystem drives, large files\n\n\nFAT32\nCross-platform\nUSB drives, compatibility\n\n\next4\nLinux\nLinux system drives\n\n\nAPFS\nmacOS\nmacOS system drives\n\n\n\n\n\n\n\n\n\n\nPhase\nComponent\nPurpose\n\n\n\n\n1\nFirmware (BIOS/UEFI)\nHardware initialization\n\n\n2\nPOST\nHardware verification\n\n\n3\nBootloader\nOS selection and loading\n\n\n4\nOS Kernel\nSystem initialization\n\n\n\n\n\n\n\n\nflowchart LR\n    A[Power On] --&gt; B[Bios/Uefi]\n    B --&gt; C[POST Check]\n    C --&gt; D[LocateDrive]\n    D --&gt; E[Run Bootloader]\n    E --&gt; F{Select OS}\n    F --&gt;|Linux| G[Kernel + systemd]\n    F --&gt;|Windows| H[NT Kernel]\n    G --&gt; I[User Login]\n    H --&gt; I\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeature\nBIOS\nUEFI\n\n\n\n\nInterface\nText-only\nGraphical possible\n\n\nStorage Support\n2 TB max\nNo practical limit\n\n\nSecurity\nBasic\nSecure Boot\n\n\nSpeed\nSlower\nFaster\n\n\n\n\n\n\nPartition Style: Defines how the drive is divided (MBR vs GPT) File System: Defines how files are stored within each partition (NTFS, ext4, etc.)\n\n\n\nYes, by:\n\nInstalling each OS on separate partitions\nUsing a bootloader that detects all systems\nSelecting which OS to boot at startup\n\n\n\n\n\n\n\n\nBoot Process (English)\nBoot Process (Hindi)\nWindows Partitions (Hindi)\n\n\n\nBoot Process (English) \nBoot Process (Hindi) \nWindows Partitions (Hindi)"
  },
  {
    "objectID": "W1/boot.html#table-of-contents",
    "href": "W1/boot.html#table-of-contents",
    "title": "Computer Boot Process: Essential Guide",
    "section": "",
    "text": "Overview\nBoot Process Steps\nPartition Styles vs File Systems\nBoot Process Summary\nFrequently Asked Questions\nResources"
  },
  {
    "objectID": "W1/boot.html#overview",
    "href": "W1/boot.html#overview",
    "title": "Computer Boot Process: Essential Guide",
    "section": "",
    "text": "The computer boot process transforms your computer from powered-off state to a fully operational system. This guide covers the essential steps and concepts needed to understand how computers start."
  },
  {
    "objectID": "W1/boot.html#boot-process-steps",
    "href": "W1/boot.html#boot-process-steps",
    "title": "Computer Boot Process: Essential Guide",
    "section": "",
    "text": "When you press the power button:\n\nCPU executes the first program BIOS/UEFI\n\nBIOS (Basic Input/Output System) - Legacy firmware (used in old computers)\nUEFI (Unified Extensible Firmware Interface) - Modern firmware\n\n\n\n\n\nPOST (Power-On Self Test):\n\nTests CPU, RAM, and storage devices\nValidates hardware components\n\nBoot Device Selection:\n\nReads Boot Order from firmware settings\nGPT drives: Looks for EFI System Partition\nMBR drives: Checks Master Boot Record in first sector\n\n\n\n\nCommon Bootloaders:\nLinux or Window bootloader, both can scan and start any OS windows or linux.\n- Linux: GRUB2, LILO, systemd-boot - Windows: Windows Boot Manager\nBootloader Tasks:\n\nScans partitions for installed operating systems\nPresents boot menu (if multiple OS found)\nLoads selected OS kernel into memory\n\n\n\n\nLinux OS Boot:\n\nKernel loads and initializes hardware\nsystemd starts (modern init system)\nSystem services launch\nUser login interface appears\n\nWindows OS Boot:\n\nNT Kernel (ntoskrnl.exe) loads\nHardware Abstraction Layer initializes\nRegistry and system drivers load\nSession Manager starts Windows subsystems\nWindows Logon presents login interface"
  },
  {
    "objectID": "W1/boot.html#partition-styles-vs-file-systems",
    "href": "W1/boot.html#partition-styles-vs-file-systems",
    "title": "Computer Boot Process: Essential Guide",
    "section": "",
    "text": "Partition styles define how a drive is divided into sections:\n\n\n\n\n\n\n\n\nFeature\nMBR\nGPT\n\n\n\n\nMax Partitions\n4 primary OR 3 primary + 1 extended\n128 primary\n\n\nMax Storage\n2 TB\n18+ exabytes\n\n\nBoot Support\nBIOS only\nBIOS + UEFI\n\n\n\n\n\n\nFile systems determine how data is stored within partitions:\n\n\n\nFile System\nOS\nUse Case\n\n\n\n\nNTFS\nWindows\nSystem drives, large files\n\n\nFAT32\nCross-platform\nUSB drives, compatibility\n\n\next4\nLinux\nLinux system drives\n\n\nAPFS\nmacOS\nmacOS system drives"
  },
  {
    "objectID": "W1/boot.html#boot-process-summary",
    "href": "W1/boot.html#boot-process-summary",
    "title": "Computer Boot Process: Essential Guide",
    "section": "",
    "text": "Phase\nComponent\nPurpose\n\n\n\n\n1\nFirmware (BIOS/UEFI)\nHardware initialization\n\n\n2\nPOST\nHardware verification\n\n\n3\nBootloader\nOS selection and loading\n\n\n4\nOS Kernel\nSystem initialization\n\n\n\n\n\n\n\n\nflowchart LR\n    A[Power On] --&gt; B[Bios/Uefi]\n    B --&gt; C[POST Check]\n    C --&gt; D[LocateDrive]\n    D --&gt; E[Run Bootloader]\n    E --&gt; F{Select OS}\n    F --&gt;|Linux| G[Kernel + systemd]\n    F --&gt;|Windows| H[NT Kernel]\n    G --&gt; I[User Login]\n    H --&gt; I"
  },
  {
    "objectID": "W1/boot.html#frequently-asked-questions",
    "href": "W1/boot.html#frequently-asked-questions",
    "title": "Computer Boot Process: Essential Guide",
    "section": "",
    "text": "Feature\nBIOS\nUEFI\n\n\n\n\nInterface\nText-only\nGraphical possible\n\n\nStorage Support\n2 TB max\nNo practical limit\n\n\nSecurity\nBasic\nSecure Boot\n\n\nSpeed\nSlower\nFaster\n\n\n\n\n\n\nPartition Style: Defines how the drive is divided (MBR vs GPT) File System: Defines how files are stored within each partition (NTFS, ext4, etc.)\n\n\n\nYes, by:\n\nInstalling each OS on separate partitions\nUsing a bootloader that detects all systems\nSelecting which OS to boot at startup"
  },
  {
    "objectID": "W1/boot.html#resources",
    "href": "W1/boot.html#resources",
    "title": "Computer Boot Process: Essential Guide",
    "section": "",
    "text": "Boot Process (English)\nBoot Process (Hindi)\nWindows Partitions (Hindi)\n\n\n\nBoot Process (English) \nBoot Process (Hindi) \nWindows Partitions (Hindi)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "📌 Quick Navigation\n\n\nWeek 1 → Development Tools\nWeek 2 → Deployment Tools\nWeek 3 → LLM APIs\n🚀 Project 1 → ?\nWeek 4 → LangChain\nWeek 5 → LangGraph\nWeek 6 → Quarto Websites & AWK\n🚀 Project 2 → ?\nWeek 7 → ?\n\n\n📌 Small Projects\nW1-&gt; Simple ChatBot (No Memory)\nW2-&gt; Memory-Based ChatBot\nW3-&gt; PDF ChatBot\nW4-&gt; YouTube Playlist QA Assistant\nW5-&gt; SQL Query Agent\nW6-&gt; Portfolio Website\nVoice-enabled AI Chat Assistant\n\n\n\n\n\n\nIntro to Linux (Dual Boot, WSL)\n\nLanguage Setup & Config (bashrc, venv, nvm, etc.)\n\nJS → nvm, node, npm, pnpm, yarn\n\nC/C++ → gcc vs g++\n\nJava → jdk, jre, jvm\n\nPython → venv, pipx, conda, uv\n\n\nGit Basics\n\ninit, add, commit, push\n\nUndo/redo commits\n\n\nFastAPI Basics\n\nOllama Setup\n\n\nSmall Project → Simple ChatBot (No Memory)\n- Build a FastAPI endpoint /ask with Ollama (Gemma).\n- Answers queries without history.\n\n\n\n\n\n\nAdvanced Git/GitHub\n\nBranching, Merging, Actions\n\nDocker/Podman\n\nDockerfile, Volumes, Networks\n\nAdvanced FastAPI\n\nDeployment Platforms\n\nVercel, Render, GitHub Pages\n\nEC2 Deployment with GitHub Actions + Docker\n\n\nSmall Project → Memory-Based ChatBot\n- FastAPI endpoint /chat with Gemini LLM.\n- Maintains multi-turn memory in RAM.\n\n\n\n\n\n\nPrompt Engineering\n\nZero-shot, Few-shot\n\n\nFunction Calling\n\nBase64 Encoding\n\nVector Databases & RAG\n\nOpenAI API Docs\nPromptFoo\n\n\nSmall Project → PDF ChatBot\n- Upload PDF → Extract text → Store in Vector DB.\n- Build RAG pipeline with Streamlit UI + FastAPI backend.\n- Multi-turn Q&A → returns answer + page number.\n\n\n\n\n\n\n\n\n\n\nPydantic Models\n\nStructured Prompts & Output Parsers\n\nChains & Runnables\n\nText Splitters\n\nVectorStores in LangChain\n\nRAG + Tool Calling\n\n\nSmall Project → YouTube Playlist QA Assistant\n- Scrape subtitles from each video of playlist.\n- Store in a vector DB.\n- Build chatbot → answers video-specific queries.\n\n\n\n\n\n\n⚠️ I Don’t have much knowledge on this topic.\n\n\nSmall Project → *SQL Query Agent\n- Convert natural language → SQL query.\n- Run on DB → Return tabular results**.\n\n\n\n\n\n\nQuarto + GitHub Pages\n\nRevealJS Presentations\n\nMarkdown → Website conversion\n\nExcel Toolpack (Correlation, Regression, Data Analysis)\n\nAWK Basics (text processing)\n\n\nSmall Project → Portfolio Website\n- Publish your portfolio with Quarto + GitHub Pages.\n\n\n\n\n\n\n\n\n\n\n\n\n\nVoice-enabled AI Chat Assistant - 🎤 Integrate STT + TTS + LLM.\n- Speak → Listen → Respond in real-time.",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "index.html#index",
    "href": "index.html#index",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "📌 Quick Navigation\n\n\nWeek 1 → Development Tools\nWeek 2 → Deployment Tools\nWeek 3 → LLM APIs\n🚀 Project 1 → ?\nWeek 4 → LangChain\nWeek 5 → LangGraph\nWeek 6 → Quarto Websites & AWK\n🚀 Project 2 → ?\nWeek 7 → ?\n\n\n📌 Small Projects\nW1-&gt; Simple ChatBot (No Memory)\nW2-&gt; Memory-Based ChatBot\nW3-&gt; PDF ChatBot\nW4-&gt; YouTube Playlist QA Assistant\nW5-&gt; SQL Query Agent\nW6-&gt; Portfolio Website\nVoice-enabled AI Chat Assistant",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "index.html#week-1-development-tools",
    "href": "index.html#week-1-development-tools",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "Intro to Linux (Dual Boot, WSL)\n\nLanguage Setup & Config (bashrc, venv, nvm, etc.)\n\nJS → nvm, node, npm, pnpm, yarn\n\nC/C++ → gcc vs g++\n\nJava → jdk, jre, jvm\n\nPython → venv, pipx, conda, uv\n\n\nGit Basics\n\ninit, add, commit, push\n\nUndo/redo commits\n\n\nFastAPI Basics\n\nOllama Setup\n\n\nSmall Project → Simple ChatBot (No Memory)\n- Build a FastAPI endpoint /ask with Ollama (Gemma).\n- Answers queries without history.",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "index.html#week-2-deployment-tools",
    "href": "index.html#week-2-deployment-tools",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "Advanced Git/GitHub\n\nBranching, Merging, Actions\n\nDocker/Podman\n\nDockerfile, Volumes, Networks\n\nAdvanced FastAPI\n\nDeployment Platforms\n\nVercel, Render, GitHub Pages\n\nEC2 Deployment with GitHub Actions + Docker\n\n\nSmall Project → Memory-Based ChatBot\n- FastAPI endpoint /chat with Gemini LLM.\n- Maintains multi-turn memory in RAM.",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "index.html#week-3-llm-apis",
    "href": "index.html#week-3-llm-apis",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "Prompt Engineering\n\nZero-shot, Few-shot\n\n\nFunction Calling\n\nBase64 Encoding\n\nVector Databases & RAG\n\nOpenAI API Docs\nPromptFoo\n\n\nSmall Project → PDF ChatBot\n- Upload PDF → Extract text → Store in Vector DB.\n- Build RAG pipeline with Streamlit UI + FastAPI backend.\n- Multi-turn Q&A → returns answer + page number.",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "index.html#week-4-langchain",
    "href": "index.html#week-4-langchain",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "Pydantic Models\n\nStructured Prompts & Output Parsers\n\nChains & Runnables\n\nText Splitters\n\nVectorStores in LangChain\n\nRAG + Tool Calling\n\n\nSmall Project → YouTube Playlist QA Assistant\n- Scrape subtitles from each video of playlist.\n- Store in a vector DB.\n- Build chatbot → answers video-specific queries.",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "index.html#week-5-langgraph",
    "href": "index.html#week-5-langgraph",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "⚠️ I Don’t have much knowledge on this topic.\n\n\nSmall Project → *SQL Query Agent\n- Convert natural language → SQL query.\n- Run on DB → Return tabular results**.",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "index.html#week-6-quarto-websites-awk",
    "href": "index.html#week-6-quarto-websites-awk",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "Quarto + GitHub Pages\n\nRevealJS Presentations\n\nMarkdown → Website conversion\n\nExcel Toolpack (Correlation, Regression, Data Analysis)\n\nAWK Basics (text processing)\n\n\nSmall Project → Portfolio Website\n- Publish your portfolio with Quarto + GitHub Pages.",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "index.html#bonus-project-optional",
    "href": "index.html#bonus-project-optional",
    "title": "TDS - Tools for Data Science",
    "section": "",
    "text": "Voice-enabled AI Chat Assistant - 🎤 Integrate STT + TTS + LLM.\n- Speak → Listen → Respond in real-time.",
    "crumbs": [
      "About The Course"
    ]
  },
  {
    "objectID": "Git/git_basics.html",
    "href": "Git/git_basics.html",
    "title": "Git",
    "section": "",
    "text": "Git is a distributed VCS(Version Control Software)\nIt store all code history/snapshots in .git folder\nIf you delete even all files, then you can recover all files from .git folder, because all codes are stored there with history\n\n\n\n\ngit init create .git folder\ncreate some files and write something\ngit add . add all files in staging area (except the files/folder name in .gitignore file)\ngit commit -m \"first commit\" record this history in .git folder\nnow repeat 2nd, 3rd and 4th steps\nIf somewhere you want to go back to any specify commit\n\ngit log --one line\ngit checkout &lt;commit_id&gt;\ngit checkout main\ngit reset &lt;file&gt; or git reset"
  },
  {
    "objectID": "Git/git_basics.html#lets-start-maintaining-history",
    "href": "Git/git_basics.html#lets-start-maintaining-history",
    "title": "Git",
    "section": "",
    "text": "git init create .git folder\ncreate some files and write something\ngit add . add all files in staging area (except the files/folder name in .gitignore file)\ngit commit -m \"first commit\" record this history in .git folder\nnow repeat 2nd, 3rd and 4th steps\nIf somewhere you want to go back to any specify commit\n\ngit log --one line\ngit checkout &lt;commit_id&gt;\ngit checkout main\ngit reset &lt;file&gt; or git reset"
  },
  {
    "objectID": "Tds_Syllabus.html",
    "href": "Tds_Syllabus.html",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "📌 Quick Navigation\n\n\nWeek 1 → Development Tools\nWeek 2 → Deployment Tools\nWeek 3 → LLM APIs\n🚀 Project 1 → ?\nWeek 4 → LangChain\nWeek 5 → LangGraph\nWeek 6 → Quarto Websites & AWK\n🚀 Project 2 → ?\nWeek 7 → ?\n\n\n📌 Small Projects\nW1-&gt; Simple ChatBot (No Memory)\nW2-&gt; Memory-Based ChatBot\nW3-&gt; PDF ChatBot\nW4-&gt; YouTube Playlist QA Assistant\nW5-&gt; SQL Query Agent\nW6-&gt; Portfolio Website\nVoice-enabled AI Chat Assistant\n\n\n\n\n\n\nIntro to Linux (Dual Boot, WSL)\n\nLanguage Setup & Config (bashrc, venv, nvm, etc.)\n\nJS → nvm, node, npm, pnpm, yarn\n\nC/C++ → gcc vs g++\n\nJava → jdk, jre, jvm\n\nPython → venv, pipx, conda, uv\n\n\nGit Basics\n\ninit, add, commit, push\n\nUndo/redo commits\n\n\nFastAPI Basics\n\nOllama Setup\n\n\nSmall Project → Simple ChatBot (No Memory)\n- Build a FastAPI endpoint /ask with Ollama (Gemma).\n- Answers queries without history.\n\n\n\n\n\n\nAdvanced Git/GitHub\n\nBranching, Merging, Actions\n\nDocker/Podman\n\nDockerfile, Volumes, Networks\n\nAdvanced FastAPI\n\nDeployment Platforms\n\nVercel, Render, GitHub Pages\n\nEC2 Deployment with GitHub Actions + Docker\n\n\nSmall Project → Memory-Based ChatBot\n- FastAPI endpoint /chat with Gemini LLM.\n- Maintains multi-turn memory in RAM.\n\n\n\n\n\n\nPrompt Engineering\n\nZero-shot, Few-shot\n\n\nFunction Calling\n\nBase64 Encoding\n\nVector Databases & RAG\n\nOpenAI API Docs\nPromptFoo\n\n\nSmall Project → PDF ChatBot\n- Upload PDF → Extract text → Store in Vector DB.\n- Build RAG pipeline with Streamlit UI + FastAPI backend.\n- Multi-turn Q&A → returns answer + page number.\n\n\n\n\n\n\n\n\n\n\nPydantic Models\n\nStructured Prompts & Output Parsers\n\nChains & Runnables\n\nText Splitters\n\nVectorStores in LangChain\n\nRAG + Tool Calling\n\n\nSmall Project → YouTube Playlist QA Assistant\n- Scrape subtitles from each video of playlist.\n- Store in a vector DB.\n- Build chatbot → answers video-specific queries.\n\n\n\n\n\n\n⚠️ I Don’t have much knowledge on this topic.\n\n\nSmall Project → *SQL Query Agent\n- Convert natural language → SQL query.\n- Run on DB → Return tabular results**.\n\n\n\n\n\n\nQuarto + GitHub Pages\n\nRevealJS Presentations\n\nMarkdown → Website conversion\n\nExcel Toolpack (Correlation, Regression, Data Analysis)\n\nAWK Basics (text processing)\n\n\nSmall Project → Portfolio Website\n- Publish your portfolio with Quarto + GitHub Pages.\n\n\n\n\n\n\n\n\n\n\n\n\n\nVoice-enabled AI Chat Assistant - 🎤 Integrate STT + TTS + LLM.\n- Speak → Listen → Respond in real-time."
  },
  {
    "objectID": "Tds_Syllabus.html#index",
    "href": "Tds_Syllabus.html#index",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "📌 Quick Navigation\n\n\nWeek 1 → Development Tools\nWeek 2 → Deployment Tools\nWeek 3 → LLM APIs\n🚀 Project 1 → ?\nWeek 4 → LangChain\nWeek 5 → LangGraph\nWeek 6 → Quarto Websites & AWK\n🚀 Project 2 → ?\nWeek 7 → ?\n\n\n📌 Small Projects\nW1-&gt; Simple ChatBot (No Memory)\nW2-&gt; Memory-Based ChatBot\nW3-&gt; PDF ChatBot\nW4-&gt; YouTube Playlist QA Assistant\nW5-&gt; SQL Query Agent\nW6-&gt; Portfolio Website\nVoice-enabled AI Chat Assistant"
  },
  {
    "objectID": "Tds_Syllabus.html#week-1-development-tools",
    "href": "Tds_Syllabus.html#week-1-development-tools",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "Intro to Linux (Dual Boot, WSL)\n\nLanguage Setup & Config (bashrc, venv, nvm, etc.)\n\nJS → nvm, node, npm, pnpm, yarn\n\nC/C++ → gcc vs g++\n\nJava → jdk, jre, jvm\n\nPython → venv, pipx, conda, uv\n\n\nGit Basics\n\ninit, add, commit, push\n\nUndo/redo commits\n\n\nFastAPI Basics\n\nOllama Setup\n\n\nSmall Project → Simple ChatBot (No Memory)\n- Build a FastAPI endpoint /ask with Ollama (Gemma).\n- Answers queries without history."
  },
  {
    "objectID": "Tds_Syllabus.html#week-2-deployment-tools",
    "href": "Tds_Syllabus.html#week-2-deployment-tools",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "Advanced Git/GitHub\n\nBranching, Merging, Actions\n\nDocker/Podman\n\nDockerfile, Volumes, Networks\n\nAdvanced FastAPI\n\nDeployment Platforms\n\nVercel, Render, GitHub Pages\n\nEC2 Deployment with GitHub Actions + Docker\n\n\nSmall Project → Memory-Based ChatBot\n- FastAPI endpoint /chat with Gemini LLM.\n- Maintains multi-turn memory in RAM."
  },
  {
    "objectID": "Tds_Syllabus.html#week-3-llm-apis",
    "href": "Tds_Syllabus.html#week-3-llm-apis",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "Prompt Engineering\n\nZero-shot, Few-shot\n\n\nFunction Calling\n\nBase64 Encoding\n\nVector Databases & RAG\n\nOpenAI API Docs\nPromptFoo\n\n\nSmall Project → PDF ChatBot\n- Upload PDF → Extract text → Store in Vector DB.\n- Build RAG pipeline with Streamlit UI + FastAPI backend.\n- Multi-turn Q&A → returns answer + page number."
  },
  {
    "objectID": "Tds_Syllabus.html#week-4-langchain",
    "href": "Tds_Syllabus.html#week-4-langchain",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "Pydantic Models\n\nStructured Prompts & Output Parsers\n\nChains & Runnables\n\nText Splitters\n\nVectorStores in LangChain\n\nRAG + Tool Calling\n\n\nSmall Project → YouTube Playlist QA Assistant\n- Scrape subtitles from each video of playlist.\n- Store in a vector DB.\n- Build chatbot → answers video-specific queries."
  },
  {
    "objectID": "Tds_Syllabus.html#week-5-langgraph",
    "href": "Tds_Syllabus.html#week-5-langgraph",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "⚠️ I Don’t have much knowledge on this topic.\n\n\nSmall Project → *SQL Query Agent\n- Convert natural language → SQL query.\n- Run on DB → Return tabular results**."
  },
  {
    "objectID": "Tds_Syllabus.html#week-6-quarto-websites-awk",
    "href": "Tds_Syllabus.html#week-6-quarto-websites-awk",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "Quarto + GitHub Pages\n\nRevealJS Presentations\n\nMarkdown → Website conversion\n\nExcel Toolpack (Correlation, Regression, Data Analysis)\n\nAWK Basics (text processing)\n\n\nSmall Project → Portfolio Website\n- Publish your portfolio with Quarto + GitHub Pages."
  },
  {
    "objectID": "Tds_Syllabus.html#bonus-project-optional",
    "href": "Tds_Syllabus.html#bonus-project-optional",
    "title": "📑 Course Roadmap",
    "section": "",
    "text": "Voice-enabled AI Chat Assistant - 🎤 Integrate STT + TTS + LLM.\n- Speak → Listen → Respond in real-time."
  },
  {
    "objectID": "W1/dual_boot.html",
    "href": "W1/dual_boot.html",
    "title": "Dual-Boot Setup Guide",
    "section": "",
    "text": "This guide will help you install another operating system (Linux) alongside your existing Windows installation.\n\n\n\n\n\n\nDisclaimer\n\n\n\n\n\nDo this at your own risk. Please watch various YouTube videos and proceed with dual boot only when you are 100% sure about the process.\nIf you want to minimize the risk:\n1. Use External SSD/HDD to install Linux\n- This will prevent almost 99% of any accidental damage to your main system\n2. Install Kubuntu\n- Since dual boot requires creating partitions\n- Kubuntu has a Replace Partition option which avoids most of the headache\n\n\n\n\n\n\nNew SSD/HDD or at least 30GB free storage on your current Windows drive\n\nIf installing on the same SSD/HDD where Windows is installed:\nI recommend shrinking at least a 30GB partition\n\nHow To Shrink Partition\n\n\nPendrive/USB drive (8GB or larger)\nOne ISO file of any Linux distribution. Kubuntu\nSoftware to create a bootable USB drive. Ventoy\n\n\n\n\n\nInsert your USB drive and run Ventoy\nFormat your USB drive with Ventoy to make it bootable\nJust Copy and paste the Linux distribution ISO files into the USB drive\nTo be sure that iso file not got corrupted, you can run sha256sum and check both on local and server matches or not\n\n\n\n\n\nRestart your computer\nGo to BIOS/UEFI Settings\n\nOn HP laptops: restart and keep pressing the F10 key\n\nNavigate to Boot Settings\nDisable Secure Boot (you can re-enable it after installation)\n\n\n\n\nOnce your USB drive and laptop BIOS/UEFI settings are ready, proceed with the installation:\n\nRestart your computer\nGo to Boot Device Options\n\nOn HP laptops: keep pressing the F9 key\n\nChoose your USB Drive\nIf using Ventoy:\n\nIt will ask which OS to boot (based on the ISOs you’ve copied)\n\nIf using BalenaEtcher: it will directly boot into that particular OS\nFor Kubuntu installation:\n\nClick on “Install”\nSelect language, keyboard layout, etc.\nWhen choosing where to install or configure partitions:\n\nChoose Replace Partition –&gt; then Select the newly created(shrinked) 30GB partition\nThe installer will format two partitions\n\nOne for your Linux installation that you just selected\nOne will be EFI partition of windows(first partition in most cases)\n\n\nChoose your username, password, etc., and proceed\nOnce installation is complete, your computer will automatically reboot or ask you to remove the USB drive and press Enter\nRemove the USB drive and press Enter to reboot\n\n\n\n\n\n\nRestart your computer\nGo to BIOS/UEFI settings\n\nYou can enable Secure Boot if desired\n\nMost importantly:\n\nNavigate to Boot Settings\nChange the boot order\nSet Ubuntu/Linux as the first boot option\n\n\n\n\n\n\nWhen you turn on your computer, you’ll have the option to boot into Ubuntu or Windows\nImportant:\n\nThe first time you boot into Windows after installation:\n\nYou may see a blue screen asking for a BitLocker recovery key\nYou can easily log in with your Microsoft account and retrieve the password from BitLocker Recovery\nThis will only be asked once.\n\n\n\n\n\n\n\nBitLocker Recovery\nKubuntu ISO\nVentoy\n\n\n\n\nShrink Partition"
  },
  {
    "objectID": "W1/dual_boot.html#requirements",
    "href": "W1/dual_boot.html#requirements",
    "title": "Dual-Boot Setup Guide",
    "section": "",
    "text": "New SSD/HDD or at least 30GB free storage on your current Windows drive\n\nIf installing on the same SSD/HDD where Windows is installed:\nI recommend shrinking at least a 30GB partition\n\nHow To Shrink Partition\n\n\nPendrive/USB drive (8GB or larger)\nOne ISO file of any Linux distribution. Kubuntu\nSoftware to create a bootable USB drive. Ventoy"
  },
  {
    "objectID": "W1/dual_boot.html#prepare-the-usb-drive",
    "href": "W1/dual_boot.html#prepare-the-usb-drive",
    "title": "Dual-Boot Setup Guide",
    "section": "",
    "text": "Insert your USB drive and run Ventoy\nFormat your USB drive with Ventoy to make it bootable\nJust Copy and paste the Linux distribution ISO files into the USB drive\nTo be sure that iso file not got corrupted, you can run sha256sum and check both on local and server matches or not"
  },
  {
    "objectID": "W1/dual_boot.html#prepare-your-laptopcomputer",
    "href": "W1/dual_boot.html#prepare-your-laptopcomputer",
    "title": "Dual-Boot Setup Guide",
    "section": "",
    "text": "Restart your computer\nGo to BIOS/UEFI Settings\n\nOn HP laptops: restart and keep pressing the F10 key\n\nNavigate to Boot Settings\nDisable Secure Boot (you can re-enable it after installation)"
  },
  {
    "objectID": "W1/dual_boot.html#installation-process",
    "href": "W1/dual_boot.html#installation-process",
    "title": "Dual-Boot Setup Guide",
    "section": "",
    "text": "Once your USB drive and laptop BIOS/UEFI settings are ready, proceed with the installation:\n\nRestart your computer\nGo to Boot Device Options\n\nOn HP laptops: keep pressing the F9 key\n\nChoose your USB Drive\nIf using Ventoy:\n\nIt will ask which OS to boot (based on the ISOs you’ve copied)\n\nIf using BalenaEtcher: it will directly boot into that particular OS\nFor Kubuntu installation:\n\nClick on “Install”\nSelect language, keyboard layout, etc.\nWhen choosing where to install or configure partitions:\n\nChoose Replace Partition –&gt; then Select the newly created(shrinked) 30GB partition\nThe installer will format two partitions\n\nOne for your Linux installation that you just selected\nOne will be EFI partition of windows(first partition in most cases)\n\n\nChoose your username, password, etc., and proceed\nOnce installation is complete, your computer will automatically reboot or ask you to remove the USB drive and press Enter\nRemove the USB drive and press Enter to reboot"
  },
  {
    "objectID": "W1/dual_boot.html#final-computer-setup",
    "href": "W1/dual_boot.html#final-computer-setup",
    "title": "Dual-Boot Setup Guide",
    "section": "",
    "text": "Restart your computer\nGo to BIOS/UEFI settings\n\nYou can enable Secure Boot if desired\n\nMost importantly:\n\nNavigate to Boot Settings\nChange the boot order\nSet Ubuntu/Linux as the first boot option"
  },
  {
    "objectID": "W1/dual_boot.html#final-notes",
    "href": "W1/dual_boot.html#final-notes",
    "title": "Dual-Boot Setup Guide",
    "section": "",
    "text": "When you turn on your computer, you’ll have the option to boot into Ubuntu or Windows\nImportant:\n\nThe first time you boot into Windows after installation:\n\nYou may see a blue screen asking for a BitLocker recovery key\nYou can easily log in with your Microsoft account and retrieve the password from BitLocker Recovery\nThis will only be asked once."
  },
  {
    "objectID": "W1/dual_boot.html#resources",
    "href": "W1/dual_boot.html#resources",
    "title": "Dual-Boot Setup Guide",
    "section": "",
    "text": "BitLocker Recovery\nKubuntu ISO\nVentoy\n\n\n\n\nShrink Partition"
  },
  {
    "objectID": "W1/w1.html",
    "href": "W1/w1.html",
    "title": "Windows to Linux",
    "section": "",
    "text": "📖 Understanding the Boot Process\n\n\n\n\n\nLearn the fundamental steps of how your computer starts up\n\n\n\n\n\nOverview\nBoot Process Steps\nPartition Styles vs File Systems\nBoot Process Summary\nFrequently Asked Questions\nResources\n\n\n\n\nThe computer boot process transforms your computer from powered-off state to a fully operational system. This guide covers the essential steps and concepts needed to understand how computers start.\n\n\n\n\n\nWhen you press the power button:\n\nCPU executes the first program BIOS/UEFI\n\nBIOS (Basic Input/Output System) - Legacy firmware (used in old computers)\nUEFI (Unified Extensible Firmware Interface) - Modern firmware\n\n\n\n\n\nPOST (Power-On Self Test):\n\nTests CPU, RAM, and storage devices\nValidates hardware components\n\nBoot Device Selection:\n\nReads Boot Order from firmware settings\nGPT drives: Looks for EFI System Partition\nMBR drives: Checks Master Boot Record in first sector\n\n\n\n\nCommon Bootloaders:\nLinux or Window bootloader, both can scan and start any OS windows or linux.\n- Linux: GRUB2, LILO, systemd-boot - Windows: Windows Boot Manager\nBootloader Tasks:\n\nScans partitions for installed operating systems\nPresents boot menu (if multiple OS found)\nLoads selected OS kernel into memory\n\n\n\n\nLinux OS Boot:\n\nKernel loads and initializes hardware\nsystemd starts (modern init system)\nSystem services launch\nUser login interface appears\n\nWindows OS Boot:\n\nNT Kernel (ntoskrnl.exe) loads\nHardware Abstraction Layer initializes\nRegistry and system drivers load\nSession Manager starts Windows subsystems\nWindows Logon presents login interface\n\n\n\n\n\n\n\nPartition styles define how a drive is divided into sections:\n\n\n\n\n\n\n\n\nFeature\nMBR\nGPT\n\n\n\n\nMax Partitions\n4 primary OR 3 primary + 1 extended\n128 primary\n\n\nMax Storage\n2 TB\n18+ exabytes\n\n\nBoot Support\nBIOS only\nBIOS + UEFI\n\n\n\n\n\n\nFile systems determine how data is stored within partitions:\n\n\n\nFile System\nOS\nUse Case\n\n\n\n\nNTFS\nWindows\nSystem drives, large files\n\n\nFAT32\nCross-platform\nUSB drives, compatibility\n\n\next4\nLinux\nLinux system drives\n\n\nAPFS\nmacOS\nmacOS system drives\n\n\n\n\n\n\n\n\n\n\nPhase\nComponent\nPurpose\n\n\n\n\n1\nFirmware (BIOS/UEFI)\nHardware initialization\n\n\n2\nPOST\nHardware verification\n\n\n3\nBootloader\nOS selection and loading\n\n\n4\nOS Kernel\nSystem initialization\n\n\n\n\n\n\n\n\nflowchart LR\n    A[Power On] --&gt; B[Bios/Uefi]\n    B --&gt; C[POST Check]\n    C --&gt; D[LocateDrive]\n    D --&gt; E[Run Bootloader]\n    E --&gt; F{Select OS}\n    F --&gt;|Linux| G[Kernel + systemd]\n    F --&gt;|Windows| H[NT Kernel]\n    G --&gt; I[User Login]\n    H --&gt; I\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeature\nBIOS\nUEFI\n\n\n\n\nInterface\nText-only\nGraphical possible\n\n\nStorage Support\n2 TB max\nNo practical limit\n\n\nSecurity\nBasic\nSecure Boot\n\n\nSpeed\nSlower\nFaster\n\n\n\n\n\n\nPartition Style: Defines how the drive is divided (MBR vs GPT) File System: Defines how files are stored within each partition (NTFS, ext4, etc.)\n\n\n\nYes, by:\n\nInstalling each OS on separate partitions\nUsing a bootloader that detects all systems\nSelecting which OS to boot at startup\n\n\n\n\n\n\n\n\nBoot Process (English)\nBoot Process (Hindi)\nWindows Partitions (Hindi)\n\n\n\nBoot Process (English) \nBoot Process (Hindi) \nWindows Partitions (Hindi)",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#table-of-contents",
    "href": "W1/w1.html#table-of-contents",
    "title": "Windows to Linux",
    "section": "",
    "text": "Overview\nBoot Process Steps\nPartition Styles vs File Systems\nBoot Process Summary\nFrequently Asked Questions\nResources",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#overview",
    "href": "W1/w1.html#overview",
    "title": "Windows to Linux",
    "section": "",
    "text": "The computer boot process transforms your computer from powered-off state to a fully operational system. This guide covers the essential steps and concepts needed to understand how computers start.",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#boot-process-steps",
    "href": "W1/w1.html#boot-process-steps",
    "title": "Windows to Linux",
    "section": "",
    "text": "When you press the power button:\n\nCPU executes the first program BIOS/UEFI\n\nBIOS (Basic Input/Output System) - Legacy firmware (used in old computers)\nUEFI (Unified Extensible Firmware Interface) - Modern firmware\n\n\n\n\n\nPOST (Power-On Self Test):\n\nTests CPU, RAM, and storage devices\nValidates hardware components\n\nBoot Device Selection:\n\nReads Boot Order from firmware settings\nGPT drives: Looks for EFI System Partition\nMBR drives: Checks Master Boot Record in first sector\n\n\n\n\nCommon Bootloaders:\nLinux or Window bootloader, both can scan and start any OS windows or linux.\n- Linux: GRUB2, LILO, systemd-boot - Windows: Windows Boot Manager\nBootloader Tasks:\n\nScans partitions for installed operating systems\nPresents boot menu (if multiple OS found)\nLoads selected OS kernel into memory\n\n\n\n\nLinux OS Boot:\n\nKernel loads and initializes hardware\nsystemd starts (modern init system)\nSystem services launch\nUser login interface appears\n\nWindows OS Boot:\n\nNT Kernel (ntoskrnl.exe) loads\nHardware Abstraction Layer initializes\nRegistry and system drivers load\nSession Manager starts Windows subsystems\nWindows Logon presents login interface",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#partition-styles-vs-file-systems",
    "href": "W1/w1.html#partition-styles-vs-file-systems",
    "title": "Windows to Linux",
    "section": "",
    "text": "Partition styles define how a drive is divided into sections:\n\n\n\n\n\n\n\n\nFeature\nMBR\nGPT\n\n\n\n\nMax Partitions\n4 primary OR 3 primary + 1 extended\n128 primary\n\n\nMax Storage\n2 TB\n18+ exabytes\n\n\nBoot Support\nBIOS only\nBIOS + UEFI\n\n\n\n\n\n\nFile systems determine how data is stored within partitions:\n\n\n\nFile System\nOS\nUse Case\n\n\n\n\nNTFS\nWindows\nSystem drives, large files\n\n\nFAT32\nCross-platform\nUSB drives, compatibility\n\n\next4\nLinux\nLinux system drives\n\n\nAPFS\nmacOS\nmacOS system drives",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#boot-process-summary",
    "href": "W1/w1.html#boot-process-summary",
    "title": "Windows to Linux",
    "section": "",
    "text": "Phase\nComponent\nPurpose\n\n\n\n\n1\nFirmware (BIOS/UEFI)\nHardware initialization\n\n\n2\nPOST\nHardware verification\n\n\n3\nBootloader\nOS selection and loading\n\n\n4\nOS Kernel\nSystem initialization\n\n\n\n\n\n\n\n\nflowchart LR\n    A[Power On] --&gt; B[Bios/Uefi]\n    B --&gt; C[POST Check]\n    C --&gt; D[LocateDrive]\n    D --&gt; E[Run Bootloader]\n    E --&gt; F{Select OS}\n    F --&gt;|Linux| G[Kernel + systemd]\n    F --&gt;|Windows| H[NT Kernel]\n    G --&gt; I[User Login]\n    H --&gt; I",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#frequently-asked-questions",
    "href": "W1/w1.html#frequently-asked-questions",
    "title": "Windows to Linux",
    "section": "",
    "text": "Feature\nBIOS\nUEFI\n\n\n\n\nInterface\nText-only\nGraphical possible\n\n\nStorage Support\n2 TB max\nNo practical limit\n\n\nSecurity\nBasic\nSecure Boot\n\n\nSpeed\nSlower\nFaster\n\n\n\n\n\n\nPartition Style: Defines how the drive is divided (MBR vs GPT) File System: Defines how files are stored within each partition (NTFS, ext4, etc.)\n\n\n\nYes, by:\n\nInstalling each OS on separate partitions\nUsing a bootloader that detects all systems\nSelecting which OS to boot at startup",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#resources",
    "href": "W1/w1.html#resources",
    "title": "Windows to Linux",
    "section": "Resources",
    "text": "Resources\n\nVideo Tutorials\n\nVirtual Box Setup (Hindi)",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#check-wsl-2-installed-or-not",
    "href": "W1/w1.html#check-wsl-2-installed-or-not",
    "title": "Windows to Linux",
    "section": "Check WSL-2 Installed or not?",
    "text": "Check WSL-2 Installed or not?\n\nOpen PowerShell\nwsl --version or wsl.exe --version\nIf any above command shows wsl version 2 , then it is already installed",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#if-wsl-2-not-instlled",
    "href": "W1/w1.html#if-wsl-2-not-instlled",
    "title": "Windows to Linux",
    "section": "If WSL 2 Not Instlled",
    "text": "If WSL 2 Not Instlled\n\nSearch Turn Windows features on or off\n\nEnable Virtual Machine Platform, Windows Hypervisor Platform, Windows Subsytem for Linux\n\nRestart Computer (Not power on/off, click on restart)\nInstall WSL WSL-2 Setup\nSwitch to WSL-2 wsl --set-default-version 2",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#if-already-installed-then-remove-previous-installed-distributions",
    "href": "W1/w1.html#if-already-installed-then-remove-previous-installed-distributions",
    "title": "Windows to Linux",
    "section": "If already installed then Remove Previous Installed Distributions",
    "text": "If already installed then Remove Previous Installed Distributions\nwsl --list --verbose\nFor Each Listed distribution\n- wsl --unregister &lt;DistributionName&gt;\n- Open Settings → Apps → Installed apps - Find each Linux distribution, click the three-dot menu, and select Uninstall",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#update-wsl-ubuntu-installation",
    "href": "W1/w1.html#update-wsl-ubuntu-installation",
    "title": "Windows to Linux",
    "section": "Update WSL –> Ubuntu Installation",
    "text": "Update WSL –&gt; Ubuntu Installation\n\nwsl --update\n\nwsl --list --online\n\nwsl --install Ubuntu-24.04 –&gt; Install Ubuntu\n\nsudo apt update && sudo apt upgrade -y –&gt; Update Ubuntu\n\n\n\n\n\n\n\nExample\n\n\n\n\n\nPS C:\\Users\\hrith&gt; wsl --install Ubuntu-24.04\nDownloading: Ubuntu 24.04 LTS\nInstalling: Ubuntu 24.04 LTS\nDistribution successfully installed. It can be launched via 'wsl.exe -d Ubuntu-24.04'\nLaunching Ubuntu-24.04...\nProvisioning the new WSL instance Ubuntu-24.04\nThis might take a while...\nCreate a default Unix user account: hrm\nNew password:\nRetype new password:\npasswd: password updated successfully\nTo run a command as administrator (user \"root\"), use \"sudo &lt;command&gt;\".\nSee \"man sudo_root\" for details.\n\nhrm@bitnd:/mnt/c/Users/hrith$ sudo apt update && sudo apt upgrade -y\n[sudo] password for hrm:\nHit:1 http://archive.ubuntu.com/ubuntu noble InRelease\nGet:2 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#install-javascript-tools",
    "href": "W1/w1.html#install-javascript-tools",
    "title": "Windows to Linux",
    "section": "Install JavaScript Tools",
    "text": "Install JavaScript Tools\n\nnvm install visit and run bash script https://github.com/nvm-sh/nvm\n\nnode install https://nodejs.org/en/download\n\nnvm install 22\n\nnvm list nvm use 22 nvm current\n\ncorepack enable yarn\n\ncorepack enable pnpm\n\n\n\nCheck\n- nvm -v\n- node -v\n- npm -v npx -v\n- pnpm -v\n- yarn -v",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#install-python-tools",
    "href": "W1/w1.html#install-python-tools",
    "title": "Windows to Linux",
    "section": "Install Python Tools",
    "text": "Install Python Tools\n\nPython VENV\n\npython3 -m venv .venv –&gt; Copy error code and run sudo apt install python3.12-venv\n\nPIPX\n\nsudo apt install pipx\n\nUV - Rust-based Python package installer\n\npipx install uv It will maintain isolation\n\nLLM\n\npipx install llm –&gt; pipx ensurepath\nConfigure it\n\nllm install llm-gemini or llm install llm-ollama\nllm keys set gemini\nllm -m gemini-2.0-flash 'Tell me fun facts about Mountain View'\n\n\nMiniConda\n\nDownload .sh https://www.anaconda.com/download/success\nbash &lt;pathto .sh file&gt;\nconda config --set auto_activate_base false",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#install-cc-tools",
    "href": "W1/w1.html#install-cc-tools",
    "title": "Windows to Linux",
    "section": "Install C/C++ Tools",
    "text": "Install C/C++ Tools\nsudo apt install build-essential\n\ngcc –&gt; The C compiler\n\ng++ –&gt; The C++ compiler\n\n\nCheck - gcc –verison\n- g++ –version",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#install-java-tools",
    "href": "W1/w1.html#install-java-tools",
    "title": "Windows to Linux",
    "section": "Install Java Tools",
    "text": "Install Java Tools\nsudo apt install default-jdk\n\nThis command installs:\n\nJava Development Kit (JDK) - Compiler, debugger, and development tools  \nJava Runtime Environment (JRE) - Required to run Java applications  \nJava Virtual Machine (JVM) - Core execution environment  \n\nConfigure JAVA_HOME Environment Variable\n\necho 'export JAVA_HOME=\"/usr/lib/jvm/default-java\"' &gt;&gt; ~/.bashrc ## confirm the path first using below update-alternatiove… command\n\nrestart shell\n\nInstall other versions of java\n\nsudo apt install openjdk-17-jdk\n\nSet Default Java/Javac installed version\n\nsudo update-alternatives --config java\nsudo update-alternatives --config javac\n\n\n\nCheck\n- java --version\n- javac --version\n- echo $JAVA_HOME",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#using-type-2-hypervisor",
    "href": "W1/w1.html#using-type-2-hypervisor",
    "title": "Windows to Linux",
    "section": "Using Type-2 Hypervisor",
    "text": "Using Type-2 Hypervisor\n\nDownload and Install Virtual Box\n\nLink\n\nDownload .iso file of any distribution\n\ne.g. Ubuntu\n\nInstall iso file in Virtual Box\n\nClick on New\nSelect Iso and fill required data…",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#requirements",
    "href": "W1/w1.html#requirements",
    "title": "Windows to Linux",
    "section": "Requirements",
    "text": "Requirements\n\nNew SSD/HDD or at least 30GB free storage on your current Windows drive\n\nIf installing on the same SSD/HDD where Windows is installed:\nI recommend shrinking at least a 30GB partition\n\nHow To Shrink Partition\n\n\nPendrive/USB drive (8GB or larger)\nOne ISO file of any Linux distribution. Kubuntu\nSoftware to create a bootable USB drive. Ventoy",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#prepare-the-usb-drive",
    "href": "W1/w1.html#prepare-the-usb-drive",
    "title": "Windows to Linux",
    "section": "Prepare the USB Drive",
    "text": "Prepare the USB Drive\n\nInsert your USB drive and run Ventoy\nFormat your USB drive with Ventoy to make it bootable\nJust Copy and paste the Linux distribution ISO files into the USB drive\nTo be sure that iso file not got corrupted, you can run sha256sum and check both on local and server matches or not",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#prepare-your-laptopcomputer",
    "href": "W1/w1.html#prepare-your-laptopcomputer",
    "title": "Windows to Linux",
    "section": "Prepare Your Laptop/Computer",
    "text": "Prepare Your Laptop/Computer\n\nRestart your computer\nGo to BIOS/UEFI Settings\n\nOn HP laptops: restart and keep pressing the F10 key\n\nNavigate to Boot Settings\nDisable Secure Boot (you can re-enable it after installation)",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#installation-process",
    "href": "W1/w1.html#installation-process",
    "title": "Windows to Linux",
    "section": "Installation Process",
    "text": "Installation Process\nOnce your USB drive and laptop BIOS/UEFI settings are ready, proceed with the installation:\n\nRestart your computer\nGo to Boot Device Options\n\nOn HP laptops: keep pressing the F9 key\n\nChoose your USB Drive\nIf using Ventoy:\n\nIt will ask which OS to boot (based on the ISOs you’ve copied)\n\nIf using BalenaEtcher: it will directly boot into that particular OS\nFor Kubuntu installation:\n\nClick on “Install”\nSelect language, keyboard layout, etc.\nWhen choosing where to install or configure partitions:\n\nChoose Replace Partition –&gt; then Select the newly created(shrinked) 30GB partition\nThe installer will format two partitions\n\nOne for your Linux installation that you just selected\nOne will be EFI partition of windows(first partition in most cases)\n\n\nChoose your username, password, etc., and proceed\nOnce installation is complete, your computer will automatically reboot or ask you to remove the USB drive and press Enter\nRemove the USB drive and press Enter to reboot",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#final-computer-setup",
    "href": "W1/w1.html#final-computer-setup",
    "title": "Windows to Linux",
    "section": "Final Computer Setup",
    "text": "Final Computer Setup\n\nRestart your computer\nGo to BIOS/UEFI settings\n\nYou can enable Secure Boot if desired\n\nMost importantly:\n\nNavigate to Boot Settings\nChange the boot order\nSet Ubuntu/Linux as the first boot option",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#final-notes",
    "href": "W1/w1.html#final-notes",
    "title": "Windows to Linux",
    "section": "Final Notes",
    "text": "Final Notes\n\nWhen you turn on your computer, you’ll have the option to boot into Ubuntu or Windows\nImportant:\n\nThe first time you boot into Windows after installation:\n\nYou may see a blue screen asking for a BitLocker recovery key\nYou can easily log in with your Microsoft account and retrieve the password from BitLocker Recovery\nThis will only be asked once.",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1.html#resources-1",
    "href": "W1/w1.html#resources-1",
    "title": "Windows to Linux",
    "section": "Resources",
    "text": "Resources\n\nBitLocker Recovery\nKubuntu ISO\nVentoy\n\n\nVideo Tutorials\n\nShrink Partition",
    "crumbs": [
      "Week1"
    ]
  },
  {
    "objectID": "W1/w1_2.html",
    "href": "W1/w1_2.html",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "We will use windows powershell to install wsl.\n\n\n\nOpen PowerShell\nwsl --version or wsl.exe --version\nIf any above command shows wsl version 2 , then it is already installed\n\n\n\n\n\nSearch Turn Windows features on or off\n\nEnable Virtual Machine Platform, Windows Hypervisor Platform, Windows Subsytem for Linux\n\nRestart Computer (Not power on/off, click on restart)\nInstall WSL WSL-2 Setup\nSwitch to WSL-2 wsl --set-default-version 2\n\n\n\n\nwsl --list --verbose\nFor Each Listed distribution\n- wsl --unregister &lt;DistributionName&gt;\n- Open Settings → Apps → Installed apps - Find each Linux distribution, click the three-dot menu, and select Uninstall\n\n\n\n\nwsl --update\n\nwsl --list --online\n\nwsl --install Ubuntu-24.04 –&gt; Install Ubuntu\n\nsudo apt update && sudo apt upgrade -y –&gt; Update Ubuntu\n\n\n\n\n\n\n\nExample\n\n\n\n\n\nPS C:\\Users\\hrith&gt; wsl --install Ubuntu-24.04\nDownloading: Ubuntu 24.04 LTS\nInstalling: Ubuntu 24.04 LTS\nDistribution successfully installed. It can be launched via 'wsl.exe -d Ubuntu-24.04'\nLaunching Ubuntu-24.04...\nProvisioning the new WSL instance Ubuntu-24.04\nThis might take a while...\nCreate a default Unix user account: hrm\nNew password:\nRetype new password:\npasswd: password updated successfully\nTo run a command as administrator (user \"root\"), use \"sudo &lt;command&gt;\".\nSee \"man sudo_root\" for details.\n\nhrm@bitnd:/mnt/c/Users/hrith$ sudo apt update && sudo apt upgrade -y\n[sudo] password for hrm:\nHit:1 http://archive.ubuntu.com/ubuntu noble InRelease\nGet:2 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]\n\n\n\n\n\n\n\nnvm install visit and run bash script https://github.com/nvm-sh/nvm\n\nnode install https://nodejs.org/en/download\n\nnvm install 22\n\nnvm list nvm use 22 nvm current\n\ncorepack enable yarn\n\ncorepack enable pnpm\n\n\n\nCheck\n- nvm -v\n- node -v\n- npm -v npx -v\n- pnpm -v\n- yarn -v\n\n\n\n\n\nPython VENV\n\npython3 -m venv .venv –&gt; Copy error code and run sudo apt install python3.12-venv\n\nPIPX\n\nsudo apt install pipx\n\nUV - Rust-based Python package installer\n\npipx install uv It will maintain isolation\n\nLLM\n\npipx install llm –&gt; pipx ensurepath\nConfigure it\n\nllm install llm-gemini or llm install llm-ollama\nllm keys set gemini\nllm -m gemini-2.0-flash 'Tell me fun facts about Mountain View'\n\n\nMiniConda\n\nDownload .sh https://www.anaconda.com/download/success\nbash &lt;pathto .sh file&gt;\nconda config --set auto_activate_base false\n\n\n\n\n\nsudo apt install build-essential\n\ngcc –&gt; The C compiler\n\ng++ –&gt; The C++ compiler\n\n\nCheck - gcc –verison\n- g++ –version\n\n\n\n\nsudo apt install default-jdk\n\nThis command installs:\n\nJava Development Kit (JDK) - Compiler, debugger, and development tools  \nJava Runtime Environment (JRE) - Required to run Java applications  \nJava Virtual Machine (JVM) - Core execution environment  \n\nConfigure JAVA_HOME Environment Variable\n\necho 'export JAVA_HOME=\"/usr/lib/jvm/default-java\"' &gt;&gt; ~/.bashrc ## confirm the path first using below update-alternatiove… command\n\nrestart shell\n\nInstall other versions of java\n\nsudo apt install openjdk-17-jdk\n\nSet Default Java/Javac installed version\n\nsudo update-alternatives --config java\nsudo update-alternatives --config javac\n\n\n\nCheck\n- java --version\n- javac --version\n- echo $JAVA_HOME\n\n\n\n\n\n\n\nWSL-2 Setup",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#check-wsl-2-installed-or-not",
    "href": "W1/w1_2.html#check-wsl-2-installed-or-not",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "Open PowerShell\nwsl --version or wsl.exe --version\nIf any above command shows wsl version 2 , then it is already installed",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#if-wsl-2-not-instlled",
    "href": "W1/w1_2.html#if-wsl-2-not-instlled",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "Search Turn Windows features on or off\n\nEnable Virtual Machine Platform, Windows Hypervisor Platform, Windows Subsytem for Linux\n\nRestart Computer (Not power on/off, click on restart)\nInstall WSL WSL-2 Setup\nSwitch to WSL-2 wsl --set-default-version 2",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#if-already-installed-then-remove-previous-installed-distributions",
    "href": "W1/w1_2.html#if-already-installed-then-remove-previous-installed-distributions",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "wsl --list --verbose\nFor Each Listed distribution\n- wsl --unregister &lt;DistributionName&gt;\n- Open Settings → Apps → Installed apps - Find each Linux distribution, click the three-dot menu, and select Uninstall",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#update-wsl-ubuntu-installation",
    "href": "W1/w1_2.html#update-wsl-ubuntu-installation",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "wsl --update\n\nwsl --list --online\n\nwsl --install Ubuntu-24.04 –&gt; Install Ubuntu\n\nsudo apt update && sudo apt upgrade -y –&gt; Update Ubuntu\n\n\n\n\n\n\n\nExample\n\n\n\n\n\nPS C:\\Users\\hrith&gt; wsl --install Ubuntu-24.04\nDownloading: Ubuntu 24.04 LTS\nInstalling: Ubuntu 24.04 LTS\nDistribution successfully installed. It can be launched via 'wsl.exe -d Ubuntu-24.04'\nLaunching Ubuntu-24.04...\nProvisioning the new WSL instance Ubuntu-24.04\nThis might take a while...\nCreate a default Unix user account: hrm\nNew password:\nRetype new password:\npasswd: password updated successfully\nTo run a command as administrator (user \"root\"), use \"sudo &lt;command&gt;\".\nSee \"man sudo_root\" for details.\n\nhrm@bitnd:/mnt/c/Users/hrith$ sudo apt update && sudo apt upgrade -y\n[sudo] password for hrm:\nHit:1 http://archive.ubuntu.com/ubuntu noble InRelease\nGet:2 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#install-javascript-tools",
    "href": "W1/w1_2.html#install-javascript-tools",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "nvm install visit and run bash script https://github.com/nvm-sh/nvm\n\nnode install https://nodejs.org/en/download\n\nnvm install 22\n\nnvm list nvm use 22 nvm current\n\ncorepack enable yarn\n\ncorepack enable pnpm\n\n\n\nCheck\n- nvm -v\n- node -v\n- npm -v npx -v\n- pnpm -v\n- yarn -v",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#install-python-tools",
    "href": "W1/w1_2.html#install-python-tools",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "Python VENV\n\npython3 -m venv .venv –&gt; Copy error code and run sudo apt install python3.12-venv\n\nPIPX\n\nsudo apt install pipx\n\nUV - Rust-based Python package installer\n\npipx install uv It will maintain isolation\n\nLLM\n\npipx install llm –&gt; pipx ensurepath\nConfigure it\n\nllm install llm-gemini or llm install llm-ollama\nllm keys set gemini\nllm -m gemini-2.0-flash 'Tell me fun facts about Mountain View'\n\n\nMiniConda\n\nDownload .sh https://www.anaconda.com/download/success\nbash &lt;pathto .sh file&gt;\nconda config --set auto_activate_base false",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#install-cc-tools",
    "href": "W1/w1_2.html#install-cc-tools",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "sudo apt install build-essential\n\ngcc –&gt; The C compiler\n\ng++ –&gt; The C++ compiler\n\n\nCheck - gcc –verison\n- g++ –version",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#install-java-tools",
    "href": "W1/w1_2.html#install-java-tools",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "sudo apt install default-jdk\n\nThis command installs:\n\nJava Development Kit (JDK) - Compiler, debugger, and development tools  \nJava Runtime Environment (JRE) - Required to run Java applications  \nJava Virtual Machine (JVM) - Core execution environment  \n\nConfigure JAVA_HOME Environment Variable\n\necho 'export JAVA_HOME=\"/usr/lib/jvm/default-java\"' &gt;&gt; ~/.bashrc ## confirm the path first using below update-alternatiove… command\n\nrestart shell\n\nInstall other versions of java\n\nsudo apt install openjdk-17-jdk\n\nSet Default Java/Javac installed version\n\nsudo update-alternatives --config java\nsudo update-alternatives --config javac\n\n\n\nCheck\n- java --version\n- javac --version\n- echo $JAVA_HOME",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_2.html#resources",
    "href": "W1/w1_2.html#resources",
    "title": "WSL - Windows Subsytem for Linux",
    "section": "",
    "text": "WSL-2 Setup",
    "crumbs": [
      "Week1",
      "WSL - Windows Subsytem for Linux"
    ]
  },
  {
    "objectID": "W1/w1_4.html",
    "href": "W1/w1_4.html",
    "title": "Dual Boot",
    "section": "",
    "text": "This guide will help you install another operating system (Linux) alongside your existing Windows installation.\n\n\n\n\n\n\nDisclaimer\n\n\n\n\n\nDo this at your own risk. Please watch various YouTube videos and proceed with dual boot only when you are 100% sure about the process.\nIf you want to minimize the risk:\n1. Use External SSD/HDD to install Linux\n- This will prevent almost 99% of any accidental damage to your main system\n2. Install Kubuntu\n- Since dual boot requires creating partitions\n- Kubuntu has a Replace Partition option which avoids most of the headache\n\n\n\n\n\n\nNew SSD/HDD or at least 30GB free storage on your current Windows drive\n\nIf installing on the same SSD/HDD where Windows is installed:\nI recommend shrinking at least a 30GB partition\n\nHow To Shrink Partition\n\n\nPendrive/USB drive (8GB or larger)\nOne ISO file of any Linux distribution. Kubuntu\nSoftware to create a bootable USB drive. Ventoy\n\n\n\n\n\nInsert your USB drive and run Ventoy\nFormat your USB drive with Ventoy to make it bootable\nJust Copy and paste the Linux distribution ISO files into the USB drive\nTo be sure that iso file not got corrupted, you can run sha256sum and check both on local and server matches or not\n\n\n\n\n\nRestart your computer\nGo to BIOS/UEFI Settings\n\nOn HP laptops: restart and keep pressing the F10 key\n\nNavigate to Boot Settings\nDisable Secure Boot (you can re-enable it after installation)\n\n\n\n\nOnce your USB drive and laptop BIOS/UEFI settings are ready, proceed with the installation:\n\nRestart your computer\nGo to Boot Device Options\n\nOn HP laptops: keep pressing the F9 key\n\nChoose your USB Drive\nIf using Ventoy:\n\nIt will ask which OS to boot (based on the ISOs you’ve copied)\n\nIf using BalenaEtcher: it will directly boot into that particular OS\nFor Kubuntu installation:\n\nClick on “Install”\nSelect language, keyboard layout, etc.\nWhen choosing where to install or configure partitions:\n\nChoose Replace Partition –&gt; then Select the newly created(shrinked) 30GB partition\nThe installer will format two partitions\n\nOne for your Linux installation that you just selected\nOne will be EFI partition of windows(first partition in most cases)\n\n\nChoose your username, password, etc., and proceed\nOnce installation is complete, your computer will automatically reboot or ask you to remove the USB drive and press Enter\nRemove the USB drive and press Enter to reboot\n\n\n\n\n\n\nRestart your computer\nGo to BIOS/UEFI settings\n\nYou can enable Secure Boot if desired\n\nMost importantly:\n\nNavigate to Boot Settings\nChange the boot order\nSet Ubuntu/Linux as the first boot option\n\n\n\n\n\n\nWhen you turn on your computer, you’ll have the option to boot into Ubuntu or Windows\nImportant:\n\nThe first time you boot into Windows after installation:\n\nYou may see a blue screen asking for a BitLocker recovery key\nYou can easily log in with your Microsoft account and retrieve the password from BitLocker Recovery\nThis will only be asked once.\n\n\n\n\n\n\n\nBitLocker Recovery\nKubuntu ISO\nVentoy\n\n\n\n\nShrink Partition",
    "crumbs": [
      "Week1",
      "Dual Boot"
    ]
  },
  {
    "objectID": "W1/w1_4.html#requirements",
    "href": "W1/w1_4.html#requirements",
    "title": "Dual Boot",
    "section": "",
    "text": "New SSD/HDD or at least 30GB free storage on your current Windows drive\n\nIf installing on the same SSD/HDD where Windows is installed:\nI recommend shrinking at least a 30GB partition\n\nHow To Shrink Partition\n\n\nPendrive/USB drive (8GB or larger)\nOne ISO file of any Linux distribution. Kubuntu\nSoftware to create a bootable USB drive. Ventoy",
    "crumbs": [
      "Week1",
      "Dual Boot"
    ]
  },
  {
    "objectID": "W1/w1_4.html#prepare-the-usb-drive",
    "href": "W1/w1_4.html#prepare-the-usb-drive",
    "title": "Dual Boot",
    "section": "",
    "text": "Insert your USB drive and run Ventoy\nFormat your USB drive with Ventoy to make it bootable\nJust Copy and paste the Linux distribution ISO files into the USB drive\nTo be sure that iso file not got corrupted, you can run sha256sum and check both on local and server matches or not",
    "crumbs": [
      "Week1",
      "Dual Boot"
    ]
  },
  {
    "objectID": "W1/w1_4.html#prepare-your-laptopcomputer",
    "href": "W1/w1_4.html#prepare-your-laptopcomputer",
    "title": "Dual Boot",
    "section": "",
    "text": "Restart your computer\nGo to BIOS/UEFI Settings\n\nOn HP laptops: restart and keep pressing the F10 key\n\nNavigate to Boot Settings\nDisable Secure Boot (you can re-enable it after installation)",
    "crumbs": [
      "Week1",
      "Dual Boot"
    ]
  },
  {
    "objectID": "W1/w1_4.html#installation-process",
    "href": "W1/w1_4.html#installation-process",
    "title": "Dual Boot",
    "section": "",
    "text": "Once your USB drive and laptop BIOS/UEFI settings are ready, proceed with the installation:\n\nRestart your computer\nGo to Boot Device Options\n\nOn HP laptops: keep pressing the F9 key\n\nChoose your USB Drive\nIf using Ventoy:\n\nIt will ask which OS to boot (based on the ISOs you’ve copied)\n\nIf using BalenaEtcher: it will directly boot into that particular OS\nFor Kubuntu installation:\n\nClick on “Install”\nSelect language, keyboard layout, etc.\nWhen choosing where to install or configure partitions:\n\nChoose Replace Partition –&gt; then Select the newly created(shrinked) 30GB partition\nThe installer will format two partitions\n\nOne for your Linux installation that you just selected\nOne will be EFI partition of windows(first partition in most cases)\n\n\nChoose your username, password, etc., and proceed\nOnce installation is complete, your computer will automatically reboot or ask you to remove the USB drive and press Enter\nRemove the USB drive and press Enter to reboot",
    "crumbs": [
      "Week1",
      "Dual Boot"
    ]
  },
  {
    "objectID": "W1/w1_4.html#final-computer-setup",
    "href": "W1/w1_4.html#final-computer-setup",
    "title": "Dual Boot",
    "section": "",
    "text": "Restart your computer\nGo to BIOS/UEFI settings\n\nYou can enable Secure Boot if desired\n\nMost importantly:\n\nNavigate to Boot Settings\nChange the boot order\nSet Ubuntu/Linux as the first boot option",
    "crumbs": [
      "Week1",
      "Dual Boot"
    ]
  },
  {
    "objectID": "W1/w1_4.html#final-notes",
    "href": "W1/w1_4.html#final-notes",
    "title": "Dual Boot",
    "section": "",
    "text": "When you turn on your computer, you’ll have the option to boot into Ubuntu or Windows\nImportant:\n\nThe first time you boot into Windows after installation:\n\nYou may see a blue screen asking for a BitLocker recovery key\nYou can easily log in with your Microsoft account and retrieve the password from BitLocker Recovery\nThis will only be asked once.",
    "crumbs": [
      "Week1",
      "Dual Boot"
    ]
  },
  {
    "objectID": "W1/w1_4.html#resources",
    "href": "W1/w1_4.html#resources",
    "title": "Dual Boot",
    "section": "",
    "text": "BitLocker Recovery\nKubuntu ISO\nVentoy\n\n\n\n\nShrink Partition",
    "crumbs": [
      "Week1",
      "Dual Boot"
    ]
  }
]